@using Microsoft.AspNetCore.Identity
@inject SignInManager<ApplicationUser> SignInManager
@inject UserManager<ApplicationUser> UserManager

<ul class="navbar-nav">
@if (SignInManager.IsSignedIn(User))
{
    var user = await UserManager.GetUserAsync(User);
    if (user == null)
    {
        await SignInManager.SignOutAsync();
        return;
    }
        <li class="nav-item">
            <button class="btn btn-dark dropdown-toggle" type="button" id="dropdownMenuButton" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                <i class="fas fa-user"></i> Conta
            </button>
            <ul class="dropdown-menu dropdown-menu-dark">
                <li>
                    <a class="nav-link text-white" asp-area="Identity" asp-page="/Account/Manage/Index" title="Manage">Alterar Dados</a>
                </li>
                <li>
                    <hr class="dropdown-divider">
                </li>
                <li>
                    <form class="form-inline" asp-area="Identity" asp-page="/Account/Logout" asp-route-returnUrl="@Url.Action("Index", "Home", new { area = "" })">
                        <button type="submit" class="nav-link btn btn-link text-white">Logout</button>
                    </form>
                </li>
            </ul>
        </li>
}
else
{  
    <li class="nav-item">
        <a class="nav-link text-white" asp-area="Identity" asp-page="/Account/Register">Register</a>
    </li>
    <li class="nav-item">
        <a class="nav-link text-white" asp-area="Identity" asp-page="/Account/Login">Login</a>
    </li>
}
</ul>
